import{o as a,c as n,d as s}from"./app.ff17d4b7.js";const t='{"title":"Props","description":"","frontmatter":{},"headers":[{"level":2,"title":"load","slug":"load"},{"level":2,"title":"isInitial","slug":"isinitial"},{"level":2,"title":"position","slug":"position"},{"level":2,"title":"container","slug":"container"}],"relativePath":"api/props.md","lastUpdated":1627634173301}',e={},o=s('<h1 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h1><h2 id="load"><a class="header-anchor" href="#load" aria-hidden="true">#</a> load</h2><ul><li>Type: <code>(action: LoadAction, payload: LoadPayload) =&gt; void</code></li><li><strong>Required</strong></li></ul><p>Callback prop which is called when it&#39;s time to load new items ( loader is visible to user ). Accepts 2 arguments:</p><div class="language-js"><pre><code><span class="token function">load</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span>\n    <span class="token comment">// Call when you finished loading data</span>\n    <span class="token comment">// Optional params:</span>\n    <span class="token comment">//   - count - how many items has been loaded</span>\n    <span class="token comment">//   - pageSize - items per page count</span>\n    loaded<span class="token punctuation">,</span>\n    \n    <span class="token comment">// Call when you have no more item</span>\n    noMore<span class="token punctuation">,</span>\n    \n    <span class="token comment">// Call if you have no items at all</span>\n    noResults<span class="token punctuation">,</span>\n    \n    <span class="token comment">// Call if you caught an error</span>\n    error<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token comment">// Indicates is it was first load</span>\n    isFirstLoad<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div><h2 id="isinitial"><a class="header-anchor" href="#isinitial" aria-hidden="true">#</a> isInitial</h2><ul><li>Type: <code>boolean</code></li><li>Default: <code>true</code></li></ul><p>Tells component is it first loading or not. Can be used with v-model to reset component if set it to true after component creation.</p><p>Using prop:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VueEternalLoading</span> <span class="token attr-name">:load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>load<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:is-initial</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isInitial<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VueEternalLoading</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>Using v-model ( can be reset ):</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VueEternalLoading</span> <span class="token attr-name">:load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>load<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">v-model:</span>is-initial</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isInitial<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VueEternalLoading</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="position"><a class="header-anchor" href="#position" aria-hidden="true">#</a> position</h2><ul><li>Type: <code>Position</code></li><li>Default: <code>default</code></li><li>Values: <code>&#39;top&#39;</code> | <code>&#39;left&#39;</code> | <code>&#39;default&#39;</code></li></ul><p>Tells where <strong>vue-eternal-loader</strong> is. It is required for <code>top</code> / <code>left</code> positions for correct scroll calculations.</p><h2 id="container"><a class="header-anchor" href="#container" aria-hidden="true">#</a> container</h2><ul><li>Type: <code>HTMLElement</code></li><li>Default: <code>document.documentElement</code></li></ul><p>Required if your scroll area is not the whole document ( <code>document.documentElement</code> ) and your position <code>top</code> or <code>left</code>. This prop tells where the scroll is, to scroll right container.</p>',18);e.render=function(s,t,e,l,p,i){return a(),n("div",null,[o])};export default e;export{t as __pageData};
