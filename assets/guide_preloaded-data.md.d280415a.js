import{o as a,c as n,d as t,a as s}from"./app.451b6f6d.js";const e='{"title":"Preloaded data","description":"","frontmatter":{},"relativePath":"guide/preloaded-data.md","lastUpdated":1633668034973}',o={},p=t('<h1 id="preloaded-data"><a class="header-anchor" href="#preloaded-data" aria-hidden="true">#</a> Preloaded data</h1><p>Normally <strong>vue-eternal-loading</strong> call <code>load</code> prop when you need to get data from server. But there can be a case when we already have preloaded data ( e.g. from cache, from other request, etc... ). In this case if we render our preloaded data and put <strong>vue-eternal-loader</strong> next to it as usual, it doesn&#39;t know about your data, and will behave like it&#39;s your first loading. It can lead to unwanted results, when you can get <strong>no-results</strong> state even if you have data. Or we will have wrong <code>isFirstLoad</code> prop in <code>#loading</code> slot.</p><p>To prevent this behaviour you need to pass falsy <code>isInitial</code> prop.</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VueEternalLoading</span> <span class="token attr-name">:load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>load<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:is-initial</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VueEternalLoading</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>Or you can pass it using v-model if you want to implement reset logics from the previous section as well.</p><div class="language-html"><pre><code><span class="token comment">&lt;!-- isIntial should be false --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VueEternalLoading</span> <span class="token attr-name">:load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>load<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:is-initial</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isInitial<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VueEternalLoading</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',6),l=s("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/tms5g870/19/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1);o.render=function(t,s,e,o,u,r){return a(),n("div",null,[p,l])};export default o;export{e as __pageData};
