import{o as n,c as s,a,b as t,d as e}from"./app.420d0e57.js";const o='{"title":"Loader positions","description":"","frontmatter":{},"relativePath":"guide/loader-positions.md","lastUpdated":1627627617737}',p={},l=a("h1",{id:"loader-positions"},[a("a",{class:"header-anchor",href:"#loader-positions","aria-hidden":"true"},"#"),t(" Loader positions")],-1),c=a("p",null,[a("strong",null,"vue-eternal-loading"),t(" offers 4 loader positions: top, left, right, bottom. We used bottom position in examples before ( means that "),a("strong",null,"vue-eternal-loading"),t(" component was below loaded items ). We shouldn't pass any prop to tell where our component is if we want to put it in the bottom or in the right. But we have to pass special props for top/left positions. Why that?")],-1),u=a("p",null,"It's because if you load new content which you put to the bottom or to the right of container, it doesn't affect scroll position towards our content.",-1),i=a("p",null,"In other words if you scroll 100 pixels down, and then put 200 pixels of new content to the end, it would be okay, because your top content and your scroll are in the same positions. Same rules can be applied to the right loader position:",-1),r=a("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/8u150Lpk/54/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1),d=e('',9),k=a("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/j2ystkcf/19/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1),h=a("p",null,"Left scroll example:",-1),m=a("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/eLoqnbaz/29/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1);p.render=function(a,t,e,o,p,f){return n(),s("div",null,[l,c,u,i,r,d,k,h,m])};export default p;export{o as __pageData};
