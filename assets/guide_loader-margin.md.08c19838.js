import{o as e,c as a,d as n,a as o}from"./app.451b6f6d.js";const t='{"title":"Loader margin","description":"","frontmatter":{},"relativePath":"guide/loader-margin.md","lastUpdated":1633624231549}',s={},r=n('<h1 id="loader-margin"><a class="header-anchor" href="#loader-margin" aria-hidden="true">#</a> Loader margin</h1><p>In previous examples <code>load</code> prop was triggered when loader was visible on screen or in your container element ( depends on <code>container</code> prop ). Sometimes you may want to start loading a little earlier to make loading process more seamless for a user. It is possible with prop <code>margin</code> which can accept params in pixels or percents as string ( it will be passed to <code>IntersectionObserver</code> as <code>rootMargin</code> param under the hood, so you can find all formats <a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin" target="_blank" rel="noopener noreferrer">here</a> ). Specifying <code>margin</code> as one value ( e.g. <code>200px</code> ) in pixels may cover the most common cases, so it&#39;s not important to learn other formats:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VueEternalLoading</span> <span class="token attr-name">:load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>load<span class="token punctuation">&quot;</span></span> <span class="token attr-name">margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VueEternalLoading</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',3),p=o("iframe",{width:"100%",height:"300",src:"//jsfiddle.net/gavrashenko/omf723ve/1/embedded/result/dark/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"},null,-1),i=n("<p>In the example above we are created <code>200px</code> invisible bounding box around our <code>VueEternalLoading</code> component markup. Now <code>load</code> prop will be triggered on <code>200px</code> earlier ( like if it was <code>200px</code> bigger in all directions ).</p><p>The important thing is that <code>margin</code> prop won&#39;t affect your layout anyhow unlike <code>css margin</code> which pushes content if you will specify it.</p>",2);s.render=function(n,o,t,s,l,c){return e(),a("div",null,[r,p,i])};export default s;export{t as __pageData};
